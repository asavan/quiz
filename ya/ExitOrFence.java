//Есть матрица NxN, в ней нулями обозначены свободные клетки, единицами - занятые.
//        Написать функцию, которая для точки (x, y) будет определять, можно ли,
//        начиная с этой точки, выйти к границе поля через соседние свободные клетки
//        (можно двигаться вправо, влево, вверх и вниз).


/**
 * Created by asavan on 24.11.2016.
 */
public class ExitOrFence {
    public static void main(String[] args) {
        int[][] map = {
                {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                {1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1},
                {1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1},
                {1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1},
                {1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1},
                {1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1},
                {1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1},
                {1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1},
                {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1},
                {1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1},
                {1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1},
                {1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1},
                {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1},
                {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1},
                {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1},
                {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1},
                {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1},
                {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1}
        };
        ;


        boolean res = exitExists(7, 7, map, map.length);
        System.out.println(res + " " + map.length + " " + map[0].length);
    }

    static boolean exitExists(int x, int y, int[][] map, int SIZE) {
        int FENCE = 1;
        int[][] moves = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};

        if (map[y][x] == FENCE) {
            return false;
        }

        if (x == 0 || x == SIZE - 1) {
            return true;
        }

        if (y == 0 || y == SIZE - 1) {
            return true;
        }
        map[y][x] = FENCE;
        for (int[] move : moves) {
            boolean res = exitExists(x + move[0], y + move[1], map, SIZE);
            if (res) {
                return true;
            }
        }
        return false;
    }

}

